<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CTF on Iossefy</title><link>/categories/ctf/</link><description>Recent content in CTF on Iossefy</description><language>en</language><managingEditor>youssef @[redacted] &amp;> /dev/null (iossefy)</managingEditor><copyright>Youssef Hesham</copyright><lastBuildDate>Sun, 28 Sep 2025 12:00:00 +0000</lastBuildDate><atom:link href="/categories/ctf/index.xml" rel="self" type="application/rss+xml"/><item><title>Shellcode 101: The notes i wish existed when i started learning shellcode</title><link>/blog/shellcode-101-the-notes-i-wish-existed-when-i-started-learning-shellcode/</link><category>ctf</category><category>shellcode</category><pubDate>Sun, 28 Sep 2025 12:00:00 +0000</pubDate><author>youssef @[redacted] &amp;> /dev/null</author><guid>/blog/shellcode-101-the-notes-i-wish-existed-when-i-started-learning-shellcode/</guid><description>&lt;p>I have faith of who ever reading this article is not a layman, you are probably
familiar with CTFs, overflowed the buffer and smashed the stack once, and
knowing what you are getting your self into. I assume you know what a CTF challenge is, x86 assembly basics, and using linux.&lt;/p>
&lt;p>The term &amp;ldquo;shellcode&amp;rdquo; originates from the common objective of an exploit usually
to execute a command shell &lt;code>/bin/sh&lt;/code>. the code is written in an assembly
language.&lt;/p></description></item></channel></rss>